steps:
  # 1. Effectue un clone complet du dépôt
  - name: 'gcr.io/cloud-builders/git'
    args: [ 'fetch', '--unshallow' ]
    dir: '.'
    id: 'git-fetch-full-history'

  # 2. Build et exécution des tests
  - name: 'maven:3.9.10-eclipse-temurin-21-alpine'
    entrypoint: 'mvn'
    dir: '.'
    args:
      - 'clean'
      - 'verify'
      - '-Pcoverage'
    waitFor: ['git-fetch-full-history']
    id: 'run-maven-tests'

  # 3. Analyse SonarQube
  - name: 'maven:3.9.10-eclipse-temurin-21-alpine'
    entrypoint: 'mvn'
    dir: '.'
    args:
      - 'sonar:sonar'
      - '-Dsonar.projectKey=${_SONAR_PROJECT_KEY}'
      - '-Dsonar.organization=${_SONAR_ORGANIZATION}'
      - '-Dsonar.host.url=${_SONAR_HOST_URL}'
      - '-Dsonar.junit.reportsPath=target/surefire-reports'
      - '-Dsonar.coverage.jacoco.xmlReportPaths=target/jacoco-reports/jacoco.xml'
    secretEnv:
      - 'SONAR_TOKEN'
    waitFor: ['run-maven-tests']
    id: 'run-sonarqube-analysis'

  # 4. Construction de l’image Docker
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'build'
      - '-t'
      - '${_GAR_LOCATION}-docker.pkg.dev/${PROJECT_ID}/${_REPOSITORY}/${_IMAGE_NAME}:${COMMIT_SHA}'
      - '.'
    dir: '.'
    env: [ 'DOCKER_BUILDKIT=1' ]
    waitFor: ['run-sonarqube-analysis']
    id: 'build-docker-image'

  # 5. Push de l'image Docker vers Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    env: [ 'DOCKER_BUILDKIT=1' ]
    args:
      - 'push'
      - '${_GAR_LOCATION}-docker.pkg.dev/${PROJECT_ID}/${_REPOSITORY}/${_IMAGE_NAME}:${COMMIT_SHA}'
    waitFor: ['build-docker-image']
    id: 'push-to-artifact-registry'

  # 6. Déploiement sur Cloud Run
  - name: 'gcr.io/cloud-builders/gcloud'
    args:
      - 'run'
      - 'jobs'
      - 'deploy'
      - '${_JOB_NAME}'
      - '--image=${_GAR_LOCATION}-docker.pkg.dev/${PROJECT_ID}/${_REPOSITORY}/${_IMAGE_NAME}:${COMMIT_SHA}'
      - '--region=${_CLOUD_RUN_REGION}'
      - '--set-secrets=API_KEY=lol-api-key:latest,MONGO_DATABASE_URL=mongo-database-url:latest'
    waitFor: ['push-to-artifact-registry']
    id: 'deploy-to-cloud-run-job'

availableSecrets:
  secretManager:
    - env: SONAR_TOKEN
      versionName: projects/${PROJECT_ID}/secrets/sonar-token/versions/latest

substitutions:
  _GAR_LOCATION: europe-west9
  _REPOSITORY: docker
  _IMAGE_NAME: league-of-legends-patch-updates
  _JOB_NAME: league-of-legends-patch-updates-job
  _CLOUD_RUN_REGION: europe-west9
  _SONAR_HOST_URL: https://sonarcloud.io/
  _SONAR_ORGANIZATION: krazytop
  _SONAR_PROJECT_KEY: krazytop_league-of-legends-patch-updates